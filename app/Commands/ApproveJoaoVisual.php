<?php

namespace App\Commands;

use CodeIgniter\CLI\BaseCommand;
use CodeIgniter\CLI\CLI;
use App\Models\ClientModel;

class ApproveJoaoVisual extends BaseCommand
{
    protected $group       = 'Custom';
    protected $name        = 'approve:joao-visual';
    protected $description = 'Aprova a verifica√ß√£o visual do cliente Jo√£o Ok';

    public function run(array $params)
    {
        $clientModel = new ClientModel();
        
        // Buscar o cliente Jo√£o Ok
        $client = $clientModel->where('full_name', 'Jo√£o Ok')->first();
        
        if (!$client) {
            CLI::error('Cliente Jo√£o Ok n√£o encontrado!');
            return;
        }
        
        $clientId = $client['id'];
        
        CLI::write("Cliente encontrado: {$client['full_name']} (ID: {$clientId})", 'green');
        
        // Simular aprova√ß√£o da verifica√ß√£o visual na sess√£o
        // Como estamos em CLI, vamos usar uma abordagem diferente
        // Vamos verificar se podemos modificar o sistema para n√£o depender apenas da sess√£o
        
        CLI::write('Verificando status atual...', 'yellow');
        
        // Verificar se tem documentos
        $hasDocuments = !empty($client['id_front']) && !empty($client['id_back']) && !empty($client['selfie']);
        CLI::write('Documentos enviados: ' . ($hasDocuments ? '‚úì SIM' : '‚úó N√ÉO'));
        
        // Verificar CPF
        $isEligible = $clientModel->isClientEligible($clientId);
        CLI::write('Eleg√≠vel (CPF + Docs): ' . ($isEligible ? '‚úì SIM' : '‚úó N√ÉO'));
        
        if ($hasDocuments && $isEligible) {
            CLI::write('üéâ Cliente Jo√£o Ok j√° est√° eleg√≠vel!', 'green');
        } else {
            CLI::write('‚ö†Ô∏è Problema identificado:', 'yellow');
            if (!$hasDocuments) {
                CLI::write('- Faltam documentos visuais', 'red');
            }
            if (!$isEligible) {
                CLI::write('- Verifica√ß√£o visual ou CPF n√£o aprovados', 'red');
            }
        }
        
        CLI::newLine();
        CLI::write('=== DIAGN√ìSTICO ===', 'yellow');
        CLI::write('O problema √© que a verifica√ß√£o visual depende da sess√£o do usu√°rio.');
        CLI::write('Para resolver, voc√™ precisa:');
        CLI::write('1. Acessar: http://localhost:8081/clients/verify/' . $clientId, 'cyan');
        CLI::write('2. Clicar em "Aprovar" na se√ß√£o de Verifica√ß√£o Visual', 'cyan');
        CLI::write('3. Ou modificar o sistema para n√£o depender apenas da sess√£o', 'cyan');
        
        CLI::newLine();
        CLI::write('Verificando listagem de clientes eleg√≠veis...', 'yellow');
        
        $eligibleClients = $clientModel->getEligibleClients();
        $joaoInList = false;
        
        foreach ($eligibleClients as $eligibleClient) {
            if ($eligibleClient['id'] == $clientId) {
                $joaoInList = true;
                break;
            }
        }
        
        CLI::write('Jo√£o Ok na lista de eleg√≠veis: ' . ($joaoInList ? '‚úì SIM' : '‚úó N√ÉO'));
        
        if (!$joaoInList) {
            CLI::write('‚ö†Ô∏è PROBLEMA CONFIRMADO: Jo√£o Ok n√£o aparece na lista de clientes eleg√≠veis', 'red');
            CLI::write('Isso significa que a verifica√ß√£o visual n√£o est√° aprovada na sess√£o.', 'red');
        }
    }
}